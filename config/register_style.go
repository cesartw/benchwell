package config

import (
	"github.com/alecthomas/chroma"
	"github.com/alecthomas/chroma/styles"
)

func registerStyle(c *Config) {
	styles.Register(chroma.MustNewStyle("sqlaid-dark", chroma.StyleEntries{
		chroma.Comment:                  c.Editor.Theme.Dark.Comment.String(),
		chroma.CommentHashbang:          c.Editor.Theme.Dark.CommentHashbang.String(),
		chroma.CommentMultiline:         c.Editor.Theme.Dark.CommentMultiline.String(),
		chroma.CommentPreproc:           c.Editor.Theme.Dark.CommentPreproc.String(),
		chroma.CommentSingle:            c.Editor.Theme.Dark.CommentSingle.String(),
		chroma.CommentSpecial:           c.Editor.Theme.Dark.CommentSpecial.String(),
		chroma.Generic:                  c.Editor.Theme.Dark.Generic.String(),
		chroma.GenericDeleted:           c.Editor.Theme.Dark.GenericDeleted.String(),
		chroma.GenericEmph:              c.Editor.Theme.Dark.GenericEmph.String(),
		chroma.GenericError:             c.Editor.Theme.Dark.GenericError.String(),
		chroma.GenericHeading:           c.Editor.Theme.Dark.GenericHeading.String(),
		chroma.GenericInserted:          c.Editor.Theme.Dark.GenericInserted.String(),
		chroma.GenericOutput:            c.Editor.Theme.Dark.GenericOutput.String(),
		chroma.GenericPrompt:            c.Editor.Theme.Dark.GenericPrompt.String(),
		chroma.GenericStrong:            c.Editor.Theme.Dark.GenericStrong.String(),
		chroma.GenericSubheading:        c.Editor.Theme.Dark.GenericSubheading.String(),
		chroma.GenericTraceback:         c.Editor.Theme.Dark.GenericTraceback.String(),
		chroma.GenericUnderline:         c.Editor.Theme.Dark.GenericUnderline.String(),
		chroma.Error:                    c.Editor.Theme.Dark.Error.String(),
		chroma.Keyword:                  c.Editor.Theme.Dark.Keyword.String(),
		chroma.KeywordConstant:          c.Editor.Theme.Dark.KeywordConstant.String(),
		chroma.KeywordDeclaration:       c.Editor.Theme.Dark.KeywordDeclaration.String(),
		chroma.KeywordNamespace:         c.Editor.Theme.Dark.KeywordNamespace.String(),
		chroma.KeywordPseudo:            c.Editor.Theme.Dark.KeywordPseudo.String(),
		chroma.KeywordReserved:          c.Editor.Theme.Dark.KeywordReserved.String(),
		chroma.KeywordType:              c.Editor.Theme.Dark.KeywordType.String(),
		chroma.Literal:                  c.Editor.Theme.Dark.Literal.String(),
		chroma.LiteralDate:              c.Editor.Theme.Dark.LiteralDate.String(),
		chroma.Name:                     c.Editor.Theme.Dark.Name.String(),
		chroma.NameAttribute:            c.Editor.Theme.Dark.NameAttribute.String(),
		chroma.NameBuiltin:              c.Editor.Theme.Dark.NameBuiltin.String(),
		chroma.NameBuiltinPseudo:        c.Editor.Theme.Dark.NameBuiltinPseudo.String(),
		chroma.NameClass:                c.Editor.Theme.Dark.NameClass.String(),
		chroma.NameConstant:             c.Editor.Theme.Dark.NameConstant.String(),
		chroma.NameDecorator:            c.Editor.Theme.Dark.NameDecorator.String(),
		chroma.NameEntity:               c.Editor.Theme.Dark.NameEntity.String(),
		chroma.NameException:            c.Editor.Theme.Dark.NameException.String(),
		chroma.NameFunction:             c.Editor.Theme.Dark.NameFunction.String(),
		chroma.NameLabel:                c.Editor.Theme.Dark.NameLabel.String(),
		chroma.NameNamespace:            c.Editor.Theme.Dark.NameNamespace.String(),
		chroma.NameOther:                c.Editor.Theme.Dark.NameOther.String(),
		chroma.NameTag:                  c.Editor.Theme.Dark.NameTag.String(),
		chroma.NameVariable:             c.Editor.Theme.Dark.NameVariable.String(),
		chroma.NameVariableClass:        c.Editor.Theme.Dark.NameVariableClass.String(),
		chroma.NameVariableGlobal:       c.Editor.Theme.Dark.NameVariableGlobal.String(),
		chroma.NameVariableInstance:     c.Editor.Theme.Dark.NameVariableInstance.String(),
		chroma.LiteralNumber:            c.Editor.Theme.Dark.LiteralNumber.String(),
		chroma.LiteralNumberBin:         c.Editor.Theme.Dark.LiteralNumberBin.String(),
		chroma.LiteralNumberFloat:       c.Editor.Theme.Dark.LiteralNumberFloat.String(),
		chroma.LiteralNumberHex:         c.Editor.Theme.Dark.LiteralNumberHex.String(),
		chroma.LiteralNumberInteger:     c.Editor.Theme.Dark.LiteralNumberInteger.String(),
		chroma.LiteralNumberIntegerLong: c.Editor.Theme.Dark.LiteralNumberIntegerLong.String(),
		chroma.LiteralNumberOct:         c.Editor.Theme.Dark.LiteralNumberOct.String(),
		chroma.Operator:                 c.Editor.Theme.Dark.Operator.String(),
		chroma.OperatorWord:             c.Editor.Theme.Dark.OperatorWord.String(),
		chroma.Other:                    c.Editor.Theme.Dark.Other.String(),
		chroma.Punctuation:              c.Editor.Theme.Dark.Punctuation.String(),
		chroma.LiteralString:            c.Editor.Theme.Dark.LiteralString.String(),
		chroma.LiteralStringBacktick:    c.Editor.Theme.Dark.LiteralStringBacktick.String(),
		chroma.LiteralStringChar:        c.Editor.Theme.Dark.LiteralStringChar.String(),
		chroma.LiteralStringDoc:         c.Editor.Theme.Dark.LiteralStringDoc.String(),
		chroma.LiteralStringDouble:      c.Editor.Theme.Dark.LiteralStringDouble.String(),
		chroma.LiteralStringEscape:      c.Editor.Theme.Dark.LiteralStringEscape.String(),
		chroma.LiteralStringHeredoc:     c.Editor.Theme.Dark.LiteralStringHeredoc.String(),
		chroma.LiteralStringInterpol:    c.Editor.Theme.Dark.LiteralStringInterpol.String(),
		chroma.LiteralStringOther:       c.Editor.Theme.Dark.LiteralStringOther.String(),
		chroma.LiteralStringRegex:       c.Editor.Theme.Dark.LiteralStringRegex.String(),
		chroma.LiteralStringSingle:      c.Editor.Theme.Dark.LiteralStringSingle.String(),
		chroma.LiteralStringSymbol:      c.Editor.Theme.Dark.LiteralStringSymbol.String(),
		chroma.Text:                     c.Editor.Theme.Dark.Text.String(),
		chroma.TextWhitespace:           c.Editor.Theme.Dark.TextWhitespace.String(),
		chroma.Background:               c.Editor.Theme.Dark.Background.String(),
	}))
	styles.Register(chroma.MustNewStyle("sqlaid-light", chroma.StyleEntries{
		chroma.Comment:                  c.Editor.Theme.Light.Comment.String(),
		chroma.CommentHashbang:          c.Editor.Theme.Light.CommentHashbang.String(),
		chroma.CommentMultiline:         c.Editor.Theme.Light.CommentMultiline.String(),
		chroma.CommentPreproc:           c.Editor.Theme.Light.CommentPreproc.String(),
		chroma.CommentSingle:            c.Editor.Theme.Light.CommentSingle.String(),
		chroma.CommentSpecial:           c.Editor.Theme.Light.CommentSpecial.String(),
		chroma.Generic:                  c.Editor.Theme.Light.Generic.String(),
		chroma.GenericDeleted:           c.Editor.Theme.Light.GenericDeleted.String(),
		chroma.GenericEmph:              c.Editor.Theme.Light.GenericEmph.String(),
		chroma.GenericError:             c.Editor.Theme.Light.GenericError.String(),
		chroma.GenericHeading:           c.Editor.Theme.Light.GenericHeading.String(),
		chroma.GenericInserted:          c.Editor.Theme.Light.GenericInserted.String(),
		chroma.GenericOutput:            c.Editor.Theme.Light.GenericOutput.String(),
		chroma.GenericPrompt:            c.Editor.Theme.Light.GenericPrompt.String(),
		chroma.GenericStrong:            c.Editor.Theme.Light.GenericStrong.String(),
		chroma.GenericSubheading:        c.Editor.Theme.Light.GenericSubheading.String(),
		chroma.GenericTraceback:         c.Editor.Theme.Light.GenericTraceback.String(),
		chroma.GenericUnderline:         c.Editor.Theme.Light.GenericUnderline.String(),
		chroma.Error:                    c.Editor.Theme.Light.Error.String(),
		chroma.Keyword:                  c.Editor.Theme.Light.Keyword.String(),
		chroma.KeywordConstant:          c.Editor.Theme.Light.KeywordConstant.String(),
		chroma.KeywordDeclaration:       c.Editor.Theme.Light.KeywordDeclaration.String(),
		chroma.KeywordNamespace:         c.Editor.Theme.Light.KeywordNamespace.String(),
		chroma.KeywordPseudo:            c.Editor.Theme.Light.KeywordPseudo.String(),
		chroma.KeywordReserved:          c.Editor.Theme.Light.KeywordReserved.String(),
		chroma.KeywordType:              c.Editor.Theme.Light.KeywordType.String(),
		chroma.Literal:                  c.Editor.Theme.Light.Literal.String(),
		chroma.LiteralDate:              c.Editor.Theme.Light.LiteralDate.String(),
		chroma.Name:                     c.Editor.Theme.Light.Name.String(),
		chroma.NameAttribute:            c.Editor.Theme.Light.NameAttribute.String(),
		chroma.NameBuiltin:              c.Editor.Theme.Light.NameBuiltin.String(),
		chroma.NameBuiltinPseudo:        c.Editor.Theme.Light.NameBuiltinPseudo.String(),
		chroma.NameClass:                c.Editor.Theme.Light.NameClass.String(),
		chroma.NameConstant:             c.Editor.Theme.Light.NameConstant.String(),
		chroma.NameDecorator:            c.Editor.Theme.Light.NameDecorator.String(),
		chroma.NameEntity:               c.Editor.Theme.Light.NameEntity.String(),
		chroma.NameException:            c.Editor.Theme.Light.NameException.String(),
		chroma.NameFunction:             c.Editor.Theme.Light.NameFunction.String(),
		chroma.NameLabel:                c.Editor.Theme.Light.NameLabel.String(),
		chroma.NameNamespace:            c.Editor.Theme.Light.NameNamespace.String(),
		chroma.NameOther:                c.Editor.Theme.Light.NameOther.String(),
		chroma.NameTag:                  c.Editor.Theme.Light.NameTag.String(),
		chroma.NameVariable:             c.Editor.Theme.Light.NameVariable.String(),
		chroma.NameVariableClass:        c.Editor.Theme.Light.NameVariableClass.String(),
		chroma.NameVariableGlobal:       c.Editor.Theme.Light.NameVariableGlobal.String(),
		chroma.NameVariableInstance:     c.Editor.Theme.Light.NameVariableInstance.String(),
		chroma.LiteralNumber:            c.Editor.Theme.Light.LiteralNumber.String(),
		chroma.LiteralNumberBin:         c.Editor.Theme.Light.LiteralNumberBin.String(),
		chroma.LiteralNumberFloat:       c.Editor.Theme.Light.LiteralNumberFloat.String(),
		chroma.LiteralNumberHex:         c.Editor.Theme.Light.LiteralNumberHex.String(),
		chroma.LiteralNumberInteger:     c.Editor.Theme.Light.LiteralNumberInteger.String(),
		chroma.LiteralNumberIntegerLong: c.Editor.Theme.Light.LiteralNumberIntegerLong.String(),
		chroma.LiteralNumberOct:         c.Editor.Theme.Light.LiteralNumberOct.String(),
		chroma.Operator:                 c.Editor.Theme.Light.Operator.String(),
		chroma.OperatorWord:             c.Editor.Theme.Light.OperatorWord.String(),
		chroma.Other:                    c.Editor.Theme.Light.Other.String(),
		chroma.Punctuation:              c.Editor.Theme.Light.Punctuation.String(),
		chroma.LiteralString:            c.Editor.Theme.Light.LiteralString.String(),
		chroma.LiteralStringBacktick:    c.Editor.Theme.Light.LiteralStringBacktick.String(),
		chroma.LiteralStringChar:        c.Editor.Theme.Light.LiteralStringChar.String(),
		chroma.LiteralStringDoc:         c.Editor.Theme.Light.LiteralStringDoc.String(),
		chroma.LiteralStringDouble:      c.Editor.Theme.Light.LiteralStringDouble.String(),
		chroma.LiteralStringEscape:      c.Editor.Theme.Light.LiteralStringEscape.String(),
		chroma.LiteralStringHeredoc:     c.Editor.Theme.Light.LiteralStringHeredoc.String(),
		chroma.LiteralStringInterpol:    c.Editor.Theme.Light.LiteralStringInterpol.String(),
		chroma.LiteralStringOther:       c.Editor.Theme.Light.LiteralStringOther.String(),
		chroma.LiteralStringRegex:       c.Editor.Theme.Light.LiteralStringRegex.String(),
		chroma.LiteralStringSingle:      c.Editor.Theme.Light.LiteralStringSingle.String(),
		chroma.LiteralStringSymbol:      c.Editor.Theme.Light.LiteralStringSymbol.String(),
		chroma.Text:                     c.Editor.Theme.Light.Text.String(),
		chroma.TextWhitespace:           c.Editor.Theme.Light.TextWhitespace.String(),
		chroma.Background:               c.Editor.Theme.Light.Background.String(),
	}))
}
